#!/bin/sh

DEBUG=0
SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
LOGPATH=/dev/null
SCRIPT_ARGS=$@

export LD_LIBRARY_PATH="${SCRIPTPATH}/headunit_libs:/jci/lib:/jci/opera/3rdpartylibs/freetype:/usr/lib/imx-mm/audio-codec:/usr/lib/imx-mm/video-codec:/usr/lib/imx-mm/parser:/data_persist/dev/lib:"
#override some GST plugins with these
export GST_PLUGIN_PATH="${SCRIPTPATH}/headunit_libs:/usr/lib/gstreamer-0.10"

if [ $DEBUG -ne 0 ]; then
  LOGPATH=/data/headunit.log
  if [ -e $LOGPATH ]; then
    LOGSIZE=$(stat -c%s "$LOGPATH")
    if [ $LOGSIZE -gt 10000000 ]; then
      # Delete log file if size exceeds 10 MB
      echo "Delete Log"
      rm -f $LOGPATH
    fi
  fi
fi

echo "****************************" >> ${LOGPATH}
hwclock --hctosys
echo "START HEADUNIT LOG - $(date +'%D %T')" >> ${LOGPATH}

if ! [ -e /tmp/root/headunit.json ]; then
 cp "${SCRIPTPATH}/headunit.json" /tmp/root/
fi

start_headunit()
{
   rm -f /tmp/root/headunit-wireless.status
   sed -i 's."wifiTransport": true."wifiTransport": false.g' /tmp/root/headunit.json
   taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" >> ${LOGPATH} 2>&1 &
   sleep 2
   touch /tmp/root/headunit.status
   echo "=== headunit-usb ===" >> ${LOGPATH}
   cat /tmp/root/headunit.json  >> ${LOGPATH}
   echo "====================" >> ${LOGPATH}
}

start_AAwireless()
{
    rm -f /tmp/root/headunit.status
    sed -i 's."wifiTransport": false."wifiTransport": true.g' /tmp/root/headunit.json
    PHONE_IP_ADDRESS=$1
    shift
    if [ ! -z $PHONE_IP_ADDRESS ]; then
        sed -i "s/\"phoneIpAddress\": \".[^\"]*\"/\"phoneIpAddress\": \"$PHONE_IP_ADDRESS\"/g" /tmp/root/headunit.json
    fi
    sleep 2
    echo "Phone IP: $PHONE_IP_ADDRESS" >> ${LOGPATH}
    taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" >> ${LOGPATH} 2>&1 &
    sleep 2
    touch /tmp/root/headunit-wireless.status
    echo "=== headunit-wifi ===" >> ${LOGPATH}
    cat /tmp/root/headunit.json  >> ${LOGPATH}
    echo "====================" >> ${LOGPATH}
}

rm -f /tmp/root/headunit.status /tmp/root/headunit-wireless.status

# prevent conflict by Official AA
killall -q -9 aap_service carplayd L_jciCARPLAY L_jciAAPA

#default USB
start_headunit

# loop forever. every 5 seconds,
while true
do
 PHONE_IP_ADDRESS=`netstat -rn|awk '$2~/192\.168\.43\.[0-9]{1,3}/ {print $2}'`

 if [ -e /tmp/root/usb_connect ]; then
  USBCHECK=1
  # echo "USB attach" >> ${LOGPATH}
 else
  USBCHECK=0
  # echo "USB detach" >> ${LOGPATH}
 fi

 if [ ! -z $PHONE_IP_ADDRESS ] && [ $USBCHECK == 0 ]; then
    if [ -e /tmp/root/headunit.status ]; then
        killall -q headunit
    fi

    if ! [ -e /tmp/root/headunit-wireless.status ]; then
        echo "WLAN Mode" >> ${LOGPATH}
        echo "Start Headunit (WiFi Mode)"
        echo "Phone IP: $PHONE_IP_ADDRESS"
        start_AAwireless $PHONE_IP_ADDRESS
    fi

 else
    # echo "USB Mode" >> ${LOGPATH}
    check_headunit=`ps|grep 'bin/headunit'|grep -v wrapper|grep -v grep|wc -l|awk '{print $1}'`
    # echo "check_headunit = $check_headunit" >> ${LOGPATH}

    [ $check_headunit -eq 0 ] && rm -f /tmp/root/headunit-wireless.status /tmp/root/headunit.status

    if [ -e /tmp/root/headunit-wireless.status ]; then
        killall -q headunit
    fi
    if ! [ -e /tmp/root/headunit.status ]; then
        echo "Start Headunit (USB Mode)"
        echo "Start USB" >> ${LOGPATH}
        start_headunit
    fi
 fi

 RAND=`expr $RANDOM % 5 + 3`
 #echo "go sleep $RAND"
 sleep $RAND

done
